#ifndef DEFINITIONS_H
#define DEFINITIONS_H

/* replaced by autoconf */
#define @DEF_DEBUG@


#define ALLOC_IN_FCT NULL
#define MAX_LABEL_LENGTH 40

#ifdef __cplusplus
extern "C" {
#endif

  typedef struct{
	 unsigned int nbchan; /** number of channels */
	 unsigned int n; /** number of samples */
	 double **d; /** data */
	 unsigned long *markers; /** stimulus onset, response, etc
										  in sampling points; nmarkers long */
	 unsigned int nmarkers;
  } EEGdata;

  typedef struct{
	 EEGdata **data; /** EEG-data for all  trials (n EEGdata-struct-ptr) */
	 unsigned int ntrials; /** number of trials = dim(eeg) */  
	 unsigned int nmarkers_per_trial;
	 unsigned long **markers; /** stimulus onset, response, etc
											in sampling points; dims are ntrials x nmarkers */
	 double *times; /** times array; data->n long */
  } EEGdata_trials;



  /** \ingroup denoising */
  typedef struct{
	 int L;
	 double (*cleanfct)(const double*, int); /** cleaning function to use */
	 double (*eta)(double, double); /** hard or soft thresholding */
	 double* (*sigextfct)(double*, int, int); /** extension fct: 'sym', 'zeros' */
  } DenoisingParameters;

  typedef struct{
	 double theta1;
	 double theta2;
  } TimewarpParameters;

  typedef struct{
	 int *upath; /** contains y-coordinate in the path through the JxK matrix, maximal length(upath)=K+J */
	 int *spath;/** contains x-coordinate in the path through the JxK matrix */
	 int J; /** length(u) (not length(upath)) */
	 int K; /** length(s) (not length(spath)) */
	 /*	 int real_length;*/ /** real length of the path (maximal K+J) */
  } WarpPath;
	

  /** \ingroup denoising */
  /** Filling the fields is optional */
  typedef struct {
	 DenoisingParameters *den_params;
	 TimewarpParameters  *tw_params;
	 int N; /** num trials */
	 int n; /** num points in each trial */
	 double R; /** mean reaction time */
	 double *Ri; /** individual reaction times in real time */
	 double **sRi; /** individual reaction times in sampling points */
	 double *times; /** sampling points -> real time */
	 double **si; /** data */
	 double *u; /** real signal*/
	 double **ui; /** cleaned signals */
	 void *additional; /** user data */
  } ModelData;


  typedef struct{
	 int    num;
	 int    num_chans;
	 char   label[MAX_LABEL_LENGTH];
	 double x;
	 double y;
	 double z;
  } ChannelInfo;

#ifdef __cplusplus
}
#endif

#endif
